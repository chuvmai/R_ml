runApp('shiny_widgets_exercice.R')
runApp('census_sidebar.R')
runApp('shiny_widgets_original.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runApp('census_fluidrow.R')
runGist("eb3470beb1c0252bd0289cbc89bcf36f")
runApp('census_fluidrow.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
checkboxInput("header", "Header", TRUE)
),
mainPanel(
tableOutput("contents")
)
)
)
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
read.csv(inFile$datapath, header = input$header)
})
}
shinyApp(ui, server)
}
interactive()
source('~/workspace/learning_R/shiny/example_import_file.R', echo=TRUE)
class(inFile)
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
counties
is.null(counties)
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
?tableOutput
runApp('census_fluidrow_loadfile.R')
library(shiny); runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
?req
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
?tableOutput
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('census_fluidrow_loadfile.R')
runApp('shiny_diamond.R')
runApp('shiny_widgets.R')
runApp('shiny_widgets_original.R')
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
read.csv(inFile$datapath, header = input$header)
})
source('~/workspace/learning_R/shiny/example_import_file.R', echo=TRUE)
library(shiny); runApp('census_fluidrow.R')
runApp('census_sidebar.R')
library(shiny); runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
library(maps)
library(mapproj)
source("helpers.R")
counties <- readRDS("data/counties.rds")
head(counties)
summary(counties)
library(Hmisc)
describe(counties)
View(counties)
runApp('census_tabsets.R')
install.packages("fBasics")
library(fBasics)
basicStats(counties)
View(counties)
View(counties)
summary(counties)
describe(counties)
a <- summary(counties)
class(a)
runApp('census_tabsets.R')
a
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
a
print(a)
runApp('census_tabsets.R')
runApp('census_tabsets.R')
a
a[,2:]
a[,2:5]
a[,2:6]
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
runApp('census_tabsets.R')
library(shiny)
runExample("01_hello")
runApp("census/")
runApp("census/")
